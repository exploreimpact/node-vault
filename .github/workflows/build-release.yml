name: Build release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci
      - run: npm run lint
      - run: npm run test
      - run: npm run build

  release:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci

      - name: Check if package version has been bumped
        id: version_check
        run: |
          current_version=$(jq -r '.version' package.json)
          echo "Current version: $current_version"

          git fetch --tags
          previous_version=$(git tag --sort=-v:refname | head -n 1 || echo "none")
          echo "Previous version: $previous_version"

          if [ "$previous_version" == "v$current_version" ]; then
            echo "Version has not been bumped. Exiting."
            exit 1
          else
            echo current_version=$current_version >> $GITHUB_OUTPUT
          fi

      - run: echo "test_value=test" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v${{ steps.version_check.outputs.current_version }}"
          git push origin "v${{ steps.version_check.outputs.current_version }}"
          release_notes=$(git log -1 --pretty=%B)
          gh release create "v${{ steps.version_check.outputs.current_version }}" --title "v${{ steps.version_check.outputs.current_version }}" --notes "${release_notes}"
          echo "release_created=true" >> $GITHUB_OUTPUT

  check:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - run: |
          release_created=$(needs.release.outputs.release_created)
          echo "release_created: $release_created"
          test_value=$(needs.release.outputs.test_value)
          echo "test_value: $test_value"

  publish-npm:
    needs: release
    if: ${{ needs.release.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
